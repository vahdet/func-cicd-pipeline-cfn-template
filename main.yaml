Description:
  Root Stack for Function Pipeline

Parameters:
  Project:
    Description: Project name to be used in resource naming (e.g. project name)
    Type: String
    MinLength: 3
    MaxLength: 16
    Default: my-func-proj
    ConstraintDescription: must be between 3 and 10 characters.
  Environment:
    Description: An environment name that will be added to resource names
    Type: String
    AllowedValues:
      - dev
      - test
      - prod
    Default: dev
    ConstraintDescription: must specify 'dev', 'test' or 'prod'.
  FunctionName:
    Description: Name of the Lambda Function (e.g. "path-finder")
    Type: String
    MinLength: 3
    MaxLength: 16
    Default: myFunc
    ConstraintDescription: must be between 3 and 10 characters.
  Repository:
    Description: The name of the repository where source changes are to be detected.
    Type: String
    Default: python-lambda-template
  Branch:
    Description: The branch of the Github repository
    Type: String
    Default: master
  CfnTemplateS3BucketName:
    Description: The bucket name at which the templates (like these) reside
    Type: String
  GitHubOwner:
    Type: String
    Default: vahdet
    Description: The name of the GitHub user or organization who owns the GitHub repository.
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: "[a-z0-9]*"
  BackendServiceBaseURL:
    Description: The base URL for the backed service of the function
    Type: String
    AllowedPattern: "^(https?|ftp|file)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]"
    ConstraintDescription: must be a valid URL.
  BackendServiceApiKey:
    Type: String
    NoEcho: true
    MinLength: 10
    MaxLength: 40
    AllowedPattern: "[a-z0-9]*"

Resources:

  # Secrets Manager
  FunctionGithubOauthTokenSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '/${Environment}/FunctionGithubOauthTokenSecret'
      Description: This is a secret for the Github Personal Access Token
      SecretString: !Sub '{"token":"${GitHubOAuthToken}"}'
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: !Ref Project
  BackendServiceApiKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '/${Environment}/BackendServiceApiKeySecret'
      Description: This is the API Key for the backend service to be called by the function
      SecretString: !Sub '{"key":"${BackendServiceApiKey}"}'
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: !Ref Project

  # Nested Stacks
  IAM:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${CfnTemplateS3BucketName}.s3.${AWS::Region}.amazonaws.com/iam.yaml
      Parameters:
        Project: !Ref Project
        Environment: !Ref Environment
  Storage:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${CfnTemplateS3BucketName}.s3.${AWS::Region}.amazonaws.com/storage.yaml
      Parameters:
        Project: !Ref Project
        Environment: !Ref Environment
        LambdaArtifactStoreBucketName: !Sub ${Project}-${Environment}-build-artifacts
  Pipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${CfnTemplateS3BucketName}.s3.${AWS::Region}.amazonaws.com/pipeline.yaml
      Parameters:
        Project: !Ref Project
        Environment: !Ref Environment
        Branch: !Ref Branch
        GitHubOwner: !Ref GitHubOwner
        FunctionGithubOauthTokenSecret: !Ref FunctionGithubOauthTokenSecret
        LambdaArtifactStoreBucket:
          Fn::GetAtt: [Storage, Outputs.LambdaArtifactStoreBucket]
        CodeBuildRoleArn:
          Fn::GetAtt: [IAM, Outputs.CodeBuildRoleArn]
        CodePipelineRoleArn:
          Fn::GetAtt: [IAM, Outputs.CodePipelineRoleArn]
        CloudFormationLambdaManagerRoleArn:
          Fn::GetAtt: [IAM, Outputs.CloudFormationLambdaManagerRoleArn]
        # Lambda-specific
        FunctionName: !Sub ${Environment}-${FunctionName}
        Repository: !Ref Repository
        BackendServiceBaseURL: !Ref BackendServiceBaseURL
        BackendServiceApiKeySecretArn: !Ref BackendServiceApiKeySecret
